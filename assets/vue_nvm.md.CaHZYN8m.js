import{_ as n,c as e,o as s,ae as o}from"./chunks/framework.CLNW5JS9.js";const v=JSON.parse('{"title":"nvm 基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"vue/nvm.md","filePath":"vue/nvm.md"}'),t={name:"vue/nvm.md"};function l(i,a,p,d,c,r){return s(),e("div",null,a[0]||(a[0]=[o(`<h1 id="nvm-基本使用" tabindex="-1">nvm 基本使用 <a class="header-anchor" href="#nvm-基本使用" aria-label="Permalink to &quot;nvm 基本使用&quot;">​</a></h1><p><a href="https://nodejs.org/en" target="_blank" rel="noreferrer"><code>node.js</code></a> 相信大家都不陌生，前端开发必备工具之一。但是工作的时候，容易遇到不同的项目需要不同的 <code>node</code> 版本依赖。这种情况，总不能用这个版本的时候把原来的给删掉然后重装一遍吧？这对于项目的维护以及我们的日常工作带来了不便。因此 <code>nvm</code> 应运而生，它就是为了解决该类问题，可以让一个设备在不同的 <code>node</code> 版本中切换自如。</p><h2 id="下载、安装和使用" tabindex="-1">下载、安装和使用 <a class="header-anchor" href="#下载、安装和使用" aria-label="Permalink to &quot;下载、安装和使用&quot;">​</a></h2><h3 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h3><p>这里以 <code>windows</code> 系统为例，<a href="https://nodejs.org/en" target="_blank" rel="noreferrer">安装包地址</a>为：<a href="https://nodejs.org/en" target="_blank" rel="noreferrer">https://nodejs.org/en</a> 。下载 <code>nvm-setup.zip</code> 安装包。</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><p>如果电脑已经安装了 <code>node</code> 了，那先把原来的给卸载掉。保证卸载干净后解压 <code>nvm-setup.zip</code> 安装包。进入解压的文件夹，双击exe后缀文件进行安装。一路next，记清下载到哪个位置。</p><h3 id="查看版本号" tabindex="-1">查看版本号 <a class="header-anchor" href="#查看版本号" aria-label="Permalink to &quot;查看版本号&quot;">​</a></h3><p>安装好之后，通过进入 <code>cmd</code>，输入以下指令来查看版本号。</p><div class="language-js-nolint vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js-nolint</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm -V</span></span></code></pre></div><h3 id="配置国内镜像" tabindex="-1">配置国内镜像 <a class="header-anchor" href="#配置国内镜像" aria-label="Permalink to &quot;配置国内镜像&quot;">​</a></h3><p>安装好后，找到安装位置中的 <code>settings.txt</code> 文件，双击打开，换行输入以下内容：</p><div class="language-js-nolint vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js-nolint</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>node_mirror: https://npm.taobao.org/mirrors/node/</span></span>
<span class="line"><span></span></span>
<span class="line"><span>npm_mirror: https://npm.taobao.org/mirrors/npm/</span></span></code></pre></div><p>然后保存，退出。</p><h3 id="安装-node" tabindex="-1">安装 node <a class="header-anchor" href="#安装-node" aria-label="Permalink to &quot;安装 node&quot;">​</a></h3><p>在完成 <code>nvm</code> 的安装后，接下来就可以使用了。我们通过 <code>nvm list available</code> 查看可以安装的 <code>node</code> 版本列表。当然也可以安装在这个列表之外的 <code>node</code> 版本，不过需要输入正确的版本号。</p><div class="language-js-nolint vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js-nolint</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm list available</span></span></code></pre></div><p>在找到想要安装的版本号后，通过输入 <code>nvm install 版本号</code> 即可安装。卸载则使用 <code>nvm uninstall 版本号</code>。</p><div class="language-js-nolint vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js-nolint</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm install 16.18.0</span></span></code></pre></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>当一切就绪后，我们通过打开 <code>cmd</code> 输入 <code>nvm ls</code> 查看已安装的版本号。然后输入 <code>nvm use 版本号</code> 即可切换为该版本。注意：有些切换不成功的话，可能需要使用管理员权限打开 <code>cmd</code>。</p><div class="language-js-nolint vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js-nolint</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm ls</span></span>
<span class="line"><span>nvm use 16.18.0</span></span></code></pre></div><p>这样我们就能随时的切换 <code>node</code> 版本了，这里还有一些常用指令：</p><div class="language-js-nolint vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js-nolint</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvm off                     // 禁用node.js版本管理(不卸载任何东西)</span></span>
<span class="line"><span>nvm on                      // 启用node.js版本管理</span></span>
<span class="line"><span>nvm install &lt;version&gt;       // 安装node.js的命名 version是版本号 例如：nvm install 8.12.0</span></span>
<span class="line"><span>nvm uninstall &lt;version&gt;     // 卸载node.js是的命令，卸载指定版本的nodejs，当安装失败时卸载使用</span></span>
<span class="line"><span>nvm ls                      // 显示所有安装的node.js版本</span></span>
<span class="line"><span>nvm list available          // 显示可以安装的所有node.js的版本</span></span>
<span class="line"><span>nvm use &lt;version&gt;           // 切换到使用指定的nodejs版本</span></span>
<span class="line"><span>nvm v                       // 显示nvm版本</span></span>
<span class="line"><span>nvm install stable          // 安装最新稳定版</span></span></code></pre></div>`,24)]))}const m=n(t,[["render",l]]);export{v as __pageData,m as default};
