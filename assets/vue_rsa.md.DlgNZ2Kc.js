import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.CLNW5JS9.js";const o=JSON.parse('{"title":"前端 RSA 加密","description":"","frontmatter":{},"headers":[],"relativePath":"vue/rsa.md","filePath":"vue/rsa.md"}'),e={name:"vue/rsa.md"};function p(h,s,l,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="前端-rsa-加密" tabindex="-1">前端 RSA 加密 <a class="header-anchor" href="#前端-rsa-加密" aria-label="Permalink to &quot;前端 RSA 加密&quot;">​</a></h1><p>最近的安全测试中，提出了用RSA对用户登录密码加密的需求。记录一下👇</p><p>一般情况下，我们都是使用公钥加密、私钥解密。使用JSEncrypt已经基本可以解决问题</p><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install jsencrypt -s</span></span></code></pre></div><h3 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import JSEncrypt from &#39;jsencrypt&#39;</span></span></code></pre></div><h3 id="公钥加密" tabindex="-1">公钥加密 <a class="header-anchor" href="#公钥加密" aria-label="Permalink to &quot;公钥加密&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> publicKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;接口获取的公钥&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> encrypt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JSEncrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置公钥</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">encrypt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPublicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(publicKey)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pass</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> encrypt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(password) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 密码加密</span></span></code></pre></div><h3 id="私钥解密" tabindex="-1">私钥解密 <a class="header-anchor" href="#私钥解密" aria-label="Permalink to &quot;私钥解密&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> publicKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;接口获取的私钥&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> crypt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JSEncrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置私钥</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">crypt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(publicKey)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(passContent) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解密</span></span></code></pre></div>`,11)]))}const y=i(e,[["render",p]]);export{o as __pageData,y as default};
